name: "Publish to Docker"
description: "Pushes built artifacts to Docker"

inputs:
  registry_username:
    description: “Username for image registry”
    required: true
  registry_password:
    description: “Password for image registry”
    required: true
  image:
    description: “Image name”
    required: true
  script:
    description: “Script to run”
    required: true
  CC:
    description: “C compiler to use”
    required: True
  ccache_debug:
    description: “Enable and upload ccache debug info”
    required: False
    default: false
    type: boolean
  ccache_output_missing:
    default: error
    description: "(warn|error|ignore)"

runs:
  using: "composite"
  steps:
    - uses: bhowell2/github-substring-action@v1.0.0
      id: substring
      with:
        value: ${{ inputs.script }}
        index_of_str: "_"
    - name: Login to Github Packages
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}
    - name: Setup ccache
      id: ccache-cpp
      uses: actions/cache@v3
      with:
        path: ${{ github.workspace }}/ccache
        key: ${{inputs.CC}}-${{steps.substring.outputs.substring}}-ccache
    # ccache does not allow setting CCACHE_DEBUG=0
    - if: ${{inputs.ccache_debug}}
      shell: bash
      run: |
        echo "CCACHE_DEBUG=1" >> $GITHUB_ENV
        echo "CCACHE_DEBUG_VAR=CCACHE_DEBUG" >> $GITHUB_ENV
    - if: ${{! inputs.ccache_debug}}
      shell: bash
      run: |
        echo "CCACHE_NODEBUG=1" >> $GITHUB_ENV
        echo "CCACHE_DEBUG_VAR=CCACHE_NODEBUG" >> $GITHUB_ENV
    - name: C++ Tests ${{inputs.CC}}
      env:
        DUNE_BUILD_DIR: /build
      shell: bash
      run: |
        docker run --rm \
            -e DUNE_BUILD_DIR \
            -e GITHUB_RUN_NUMBER \
            -e ${{ env.CCACHE_DEBUG_VAR }} \
            -v ${{ github.workspace }}/build/testresults/:/build/testresults \
            -v ${{ github.workspace }}/ccache/:/root/.ccache \
            -e OMPI_ALLOW_RUN_AS_ROOT=1 -e OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1 \
          ${{ inputs.image }} \
            ${{ inputs.script }}
    - uses: actions/upload-artifact@v3
      if: ${{inputs.ccache_debug}}
      with:
        if-no-files-found: ${{inputs.ccache_output_missing}}
        name: ccache-log_${{steps.substring.outputs.substring}}_${{inputs.CC}}
        path: ${{github.workspace}}/build/testresults/ccache/*.ccache-*
