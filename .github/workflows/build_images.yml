---
name: Build Images

on:
    workflow_call:
        outputs:
            matrix-combinations:
                description: json data describing the build matrix
                value: ${{ jobs.matrix-setup.outputs.matrix-combinations }}
            image_tag:
                description: a string to identify the generated docker image, needs to postfixxed with ${CC}
                value: ${{ jobs.metadata.outputs.tags }}

concurrency:
    group: build_images @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
    cancel-in-progress: false

env:
    DUNE_BUILD_DIR: /build

jobs:
    matrix-setup:
        runs-on: ubuntu-22.04
        steps:
            - name: Setup matrix combinations
              id: setup-matrix-combinations
              run: |
                  echo 'matrix-combinations<<EOF' >> $GITHUB_OUTPUT
                  echo '{"include":[
                      {"CC": "gcc", "CXX": "g++"},]}' >> $GITHUB_OUTPUT
                  echo 'EOF' >> $GITHUB_OUTPUT
        outputs:
            matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}

    metadata:
        runs-on: ubuntu-22.04
        needs: matrix-setup
        steps:
            - uses: actions/checkout@v3
              with:
                submodules: true
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v4
              with:
                  images: ghcr.io/${{github.repository}}/ci_test
                  flavor: |
                      latest=false
                  tags: |
                      type=sha,suffix=-g{{branch}}
        outputs:
            tags: ${{steps.meta.outputs.tags}}
    build:
        runs-on: ubuntu-22.04
        needs: [metadata, matrix-setup]
        strategy:
            matrix: ${{ fromJson(needs.matrix-setup.outputs.matrix-combinations) }}
        permissions:
            packages: write
        steps:
            - uses: actions/checkout@v3
              with:
                submodules: true
                # version info generation needs potentially all commits
                fetch-depth: 0
            - name: Get tags
              run: git fetch --tags origin
            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v2
            - name: Login to Github Packages
              uses: docker/login-action@v2
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build Image
              uses: docker/build-push-action@v3
              with:
                  context: .
                  push: true
                  file: deps/Dockerfile
                  cache-from: type=registry,ref=ghcr.io/${{github.repository}}/ci_test
                  cache-to: type=inline
                  tags: ${{ needs.metadata.outputs.tags }}_${{matrix.CC}}
                  build-args: |
                      BUILD_CXX=${{matrix.CXX}}
                      BUILD_CC=${{matrix.CC}}
                      DEBIAN_BASE=debian
                      BUILD_OPTS=travis.ninja
