---
name: Test

on:
    push:
    #     branches:
    #         - main
    # pull_request:
    workflow_dispatch:
      # manually starting this workflow enables ccache debug by default
      inputs:
        ccache_debug:
          description: 'Enable and upload ccache debug info'
          required: false
          default: '1'

concurrency:
    group: ${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}
    cancel-in-progress: true

jobs:
    build_images:
        uses: ./.github/workflows/build_images.yml

    test_cpp:
        runs-on: ubuntu-22.04
        needs: [build_images]
        strategy:
            matrix: ${{ fromJson(needs.build_images.outputs.matrix-combinations) }}
            fail-fast: false
        steps:
          - uses: actions/checkout@v3
          - uses: ./.github/actions/docker_run
            with:
              script: /src/.github/workflows/test_cpp.bash
              registry_username: ${{ github.actor }}
              registry_password: ${{ secrets.GITHUB_TOKEN }}
              image: ${{ needs.build_images.outputs.image_tag }}_${{matrix.CC}}
              CC: ${{matrix.CC}}
          - uses: actions/upload-artifact@v3
            name: Upload CPP results
            if: always()
            with:
              name: cpp_junit_reports
              path: ${{ github.workspace }}/build/testresults/*xml
              if-no-files-found: error

    test_headercheck:
        runs-on: ubuntu-22.04
        needs: [build_images]
        strategy:
            matrix: ${{ fromJson(needs.build_images.outputs.matrix-combinations) }}
        steps:
          - uses: actions/checkout@v3
          - uses: ./.github/actions/docker_run
            with:
              script: /src/.github/workflows/test_headercheck.bash
              registry_username: ${{ github.actor }}
              registry_password: ${{ secrets.GITHUB_TOKEN }}
              image: ${{ needs.build_images.outputs.image_tag }}_${{matrix.CC}}
              CC: ${{matrix.CC}}

    test_python:
        runs-on: ubuntu-22.04
        needs: [build_images]
        strategy:
            matrix: ${{ fromJson(needs.build_images.outputs.matrix-combinations) }}
            fail-fast: false
        steps:
          - uses: actions/checkout@v3
          - uses: ./.github/actions/docker_run
            with:
              script: /src/.github/workflows/test_python.bash
              registry_username: ${{ github.actor }}
              registry_password: ${{ secrets.GITHUB_TOKEN }}
              image: ${{ needs.build_images.outputs.image_tag }}_${{matrix.CC}}
              CC: ${{matrix.CC}}
          - uses: actions/upload-artifact@v3
            name: Upload Python results
            if: always()
            with:
              name: python_junit_reports
              path: ${{ github.workspace }}/build/testresults/*xml
    tutorials:
        runs-on: ubuntu-22.04
        needs: [build_images]
        strategy:
            matrix: ${{ fromJson(needs.build_images.outputs.matrix-combinations) }}
            fail-fast: false
        steps:
          - uses: actions/checkout@v3
          - uses: ./.github/actions/docker_run
            with:
              script: /src/.github/workflows/build_tutorials.bash
              registry_username: ${{ github.actor }}
              registry_password: ${{ secrets.GITHUB_TOKEN }}
              image: ${{ needs.build_images.outputs.image_tag }}_${{matrix.CC}}
              CC: ${{matrix.CC}}
              ccache_output_missing: ignore
          - uses: actions/upload-artifact@v3
            name: Upload Tutorials HTML
            if: always()
            with:
              name: tutorials_html
              path: ${{ github.workspace }}/build/testresults/tutorials

    combine_reports:
      needs: [test_cpp, test_python]
      runs-on: ubuntu-22.04
      steps:
        - uses: actions/download-artifact@v3
          name: Download Python reports
          with:
            name: python_junit_reports
        - uses: actions/download-artifact@v3
          name: Download C++ reports
          with:
            name: cpp_junit_reports
        # This suddenly started to fail. Needs pinning of last working version?
        # - uses: actions/setup-node@v3
        #   with:
        #     node-version: 16
        # - run: npm install -g junit-report-merger
        # - run: jrm combined_report.xml "*.xml"
        - uses: actions/upload-artifact@v3
          with:
            name: combined_report
            path: "*.xml"
    pages: # needs to be skipped on not-main runs
      needs: [tutorials]
      environment:
        name: github-pages
        url: ${{ steps.deployment.outputs.page_url }}
      runs-on: ubuntu-latest
      steps:
        - name: Download html
          uses: actions/download-artifact@v3
          with:
            name: tutorials_html
        - run: |
            ls -la
        - name: Setup Pages
          uses: actions/configure-pages@v2
        - name: Upload artifact
          uses: actions/upload-pages-artifact@v1
          with:
            # Upload entire repository
            path: 'html'
        - name: Deploy to GitHub Pages
          id: deployment
          uses: actions/deploy-pages@v1
